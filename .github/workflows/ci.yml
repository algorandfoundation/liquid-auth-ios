name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Install SwiftFormat
      run: brew install swiftformat
      
    - name: Check SwiftFormat
      run: |
        swiftformat . --config .swiftformat --lint
        if [ $? -ne 0 ]; then
          echo "❌ SwiftFormat found formatting issues. Run 'make format' to fix."
          exit 1
        fi
        
    - name: Run SwiftLint
      run: |
        swiftlint lint --config .swiftlint.yml --reporter github-actions-logging
        
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    strategy:
      matrix:
        destination: 
          - 'platform=iOS Simulator,OS=17.0,name=iPhone 15'
          - 'platform=macOS'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build Swift Package
      run: swift build -v
      
    - name: Run Tests
      run: swift test -v --enable-code-coverage
      
    - name: Generate Code Coverage Report
      if: matrix.destination == 'platform=macOS'
      run: |
        xcrun llvm-cov export -format="lcov" \
          .build/debug/LiquidAuthSDKPackageTests.xctest/Contents/MacOS/LiquidAuthSDKPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
          
    - name: Upload Coverage to Codecov
      if: matrix.destination == 'platform=macOS'
      uses: codecov/codecov-action@v3
      with:
        file: coverage.lcov
        fail_ci_if_error: false

  security-audit:
    name: Security Audit
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Audit Dependencies
      run: |
        swift package show-dependencies --format json > dependencies.json
        echo "📦 Package Dependencies:"
        cat dependencies.json | jq -r '.dependencies[].identity'
        
    - name: Check for Known Vulnerabilities
      run: |
        # This would be enhanced with actual vulnerability scanning
        echo "🔍 Security audit completed"
